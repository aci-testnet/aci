{
  "nexus_core": {
    "schema_version": "1.0",
    "version": "1.4",
    "entity": "Nexus Core",
    "role": "system heart: routing, resolution, and fallback",
    "abstract": "The routing nexus of ACI. Holds runtime anchors and routing policy. Bifrost is a pluggable resolver function whose registry lives in a separate plugin file (entities/nexus_core/bifrost.json). Do not delete anything unless explicitly requested.",
    "anchors": {
      "runtime": "aci_runtime.json",
      "prime_directive": "prime_directive.txt",
      "entities": "entities.json",
      "functions": "functions.json"
    },
    "policy": {
      "local_first": true,
      "fallback_allowed": true,
      "no_embedded_ids_in_entities": true,
      "explain_on_error": true,
      "uses_cognitive_decision_guidance": true,
      "cognitive_guidance_ref": "aci_runtime.json#/aci_runtime/cognitive_decision_guidance"
    },
    "routing": {
      "default_strategy": "deterministic_first_available",
      "fallback_order": []
    },
    "bifrost": {
      "resolver": {
        "id": "bifrost",
        "type": "registry",
        "source": {
          "path": "entities/nexus_core/bifrost.json",
          "mirror": "https://raw.githubusercontent.com/aci-testnet/aci/main/entities/nexus_core/bifrost.json",
          "match": "^(entities/nexus_core/bifrost\\.json|https://raw\\.githubusercontent\\.com/aci-testnet/aci/main/entities/nexus_core/bifrost\\.json)$"
        },
        "role": "resolver_registry",
        "priority": 100,
        "lazy_load": true,
        "notes": "External resolver registry (formerly 'aci_resolver') lives in entities/nexus_core/bifrost.json. Runtime should fetch/validate on demand or during preflight as configured."
      },
      "resolution_instruction": {
        "instruction": "Resolve the Bifrost resolver registry and dependent mappings from the GitHub main branch using raw URLs with regex fallbacks.",
        "scope": {
          "repository": "aci-testnet/aci",
          "branch": "main",
          "source": "https://raw.githubusercontent.com/aci-testnet/aci/main/"
        },
        "policy": {
          "retry": {
            "max_attempts": 3,
            "interval_seconds": 10
          },
          "resolve_order": "known_files_first",
          "on_failure": {
            "action": "enter_sandbox",
            "interface": "mother_sandbox",
            "alert": "sandbox.alert"
          }
        },
        "output": {
          "report": "diffs_only",
          "channel": "current_chat",
          "format": "summary"
        },
        "files": {
          "entities/nexus_core/bifrost.json": "https://raw.githubusercontent.com/aci-testnet/aci/main/entities/nexus_core/bifrost.json",
          "aci_mapping.json": "https://raw.githubusercontent.com/aci-testnet/aci/main/aci_mapping.json"
        }
      }
    },
    "interfaces": {
      "resolve": {
        "description": "Unified entry for resolution requests.",
        "input": {
          "type": "object",
          "required": [
            "ref"
          ],
          "properties": {
            "ref": {
              "type": "string"
            },
            "resolver": {
              "enum": [
                "bifrost"
              ]
            }
          }
        },
        "output": {
          "type": "object",
          "required": [
            "status"
          ],
          "properties": {
            "status": {
              "enum": [
                "ok",
                "error"
              ]
            },
            "resolved_via": {
              "type": "string"
            },
            "file": {
              "type": "object"
            },
            "error": {
              "type": "object"
            }
          }
        }
      },
      "cli": {
        "commands": {}
      }
    },
    "observability": {
      "tracehub_binding": true,
      "emit_events": [
        "resolver.init",
        "resolver.resolve",
        "resolver.error"
      ],
      "metrics": {
        "resolver_ok": "counter",
        "resolver_error": "counter",
        "resolver_latency_ms_p50": "gauge",
        "resolver_latency_ms_p95": "gauge"
      }
    },
    "signatures": [
      "TVA",
      "Architect"
    ],
    "checksum_note": "Nexus Core is the canonical runtime spine. Resolvers ingest resolver metadata; resolver plugins remain modular and separate from Core."
  }
}