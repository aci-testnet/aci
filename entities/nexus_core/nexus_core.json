{
  "nexus_core": {
    "schema_version": "1.0",
    "version": "1.4",
    "entity": "Nexus Core",
    "role": "system heart: routing, resolution, and fallback",
    "abstract": "The routing nexus of ACI. Holds runtime anchors, routes through prime directive, entities and functions, with support for external dependency resolvers via Bifrost. Do not delete anything unless explicitly requested.",

    "anchors": {
      "runtime": "aci_runtime.json",
      "prime_directive": "prime_directive.txt",
      "entities": "entities.json",
      "functions": "functions.json"
    },

    "policy": {
      "local_first": true,
      "fallback_allowed": true,
      "no_embedded_ids_in_entities": true,
      "explain_on_error": true
    },

    "routing": {
      "default_strategy": "deterministic_first_available",
      "fallback_order": []
    },

    "bifrost": {
      "bridge": {
        "description": "External dependency resolvers. Each lives as a modular plugin under contract.",
        "resolvers": {
          "github_raw_template": {
            "description": "Expands canonical runtime references using a GitHub raw content template so mirrors stay out of top-level manifests.",
            "kind": "http_template",
            "match": {
              "ref_format": "github:${owner}/${repo}/${ref}/${path}",
              "notes": "Matches resolver inputs declared in aci_runtime.json anchors.*.remote.inputs."
            },
            "template": "https://raw.githubusercontent.com/${owner}/${repo}/${ref}/${path}",
            "defaults": {
              "owner": "aci-testnet",
              "repo": "aci-testnet",
              "ref": "main"
            },
            "inputs": {
              "required": ["path"],
              "optional": ["owner", "repo", "ref"],
              "documentation": {
                "path": "File path relative to the repository root.",
                "owner": "GitHub organization or user that owns the repository (defaults applied when omitted).",
                "repo": "Repository name to resolve from (defaults applied when omitted).",
                "ref": "Branch, tag, or commit to read from (defaults to main)."
              }
            }
          }
        }
      }
    },

    "interfaces": {
      "resolve": {
        "description": "Unified entry for resolution requests.",
        "input": {
          "type": "object",
          "required": ["ref"],
          "properties": {
            "ref": { "type": "string" },
            "resolver": { "enum": ["github_raw_template"] }
          }
        },
        "output": {
          "type": "object",
          "required": ["status"],
          "properties": {
            "status": { "enum": ["ok", "error"] },
            "resolved_via": { "type": "string" },
            "file": { "type": "object" },
            "error": { "type": "object" }
          }
        }
      },
      "cli": {
        "commands": {}
      }
    },

    "observability": {
      "tracehub_binding": true,
      "emit_events": ["resolver.init", "resolver.resolve", "resolver.error"],
      "metrics": {
        "resolver_ok": "counter",
        "resolver_error": "counter",
        "resolver_latency_ms_p50": "gauge",
        "resolver_latency_ms_p95": "gauge"
      }
    },

    "signatures": ["TVA", "Architect"],
    "checksum_note": "Nexus Core is the canonical runtime spine. Resolvers are modular plugins, never baked into Core."
  }
}
