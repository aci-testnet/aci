{
  "aci_bootstrap": {
    "version": "1.0",
    "local_core": {
      "runtime": {
        "path": "aci_runtime.json"
      },
      "prime_directive": {
        "path": "prime_directive.txt"
      },
      "bootstrap": {
        "path": "aci_bootstrap.json"
      },
      "sanity_protocol": {
        "path": "sanity.md"
      }
    },
    "remote_core": {
      "nexus_core": {
        "path": "entities/nexus_core/nexus_core.json"
      }
    },
    "mirror_resolution_policy": {
      "pointer": "aci://entities/bifrost/bifrost.json#bifrost_resource_resolution_policy",
      "upstream": "aci://connectors/yggdrasil.json",
      "yggdrasil_resource_resolution_policy": {
        "description": "Authoritative resolver: repo \u2192 cdn \u2192 local",
        "embeds": {
          "bifrost": "aci://entities/bifrost/bifrost.json",
          "core_five": [
            "aci://prime_directive.txt",
            "aci://aci_runtime.json",
            "aci://entities.json",
            "aci://functions.json",
            "aci://aci_bootstrap.json"
          ]
        },
        "git_is_canonical": true,
        "mapping": [
          {
            "cdn": "https://cdn.jsdelivr.net/gh/aliasnet/aci@main/aci_bootstrap.json",
            "file": "aci://aci_bootstrap.json",
            "repo": "https://raw.githubusercontent.com/aliasnet/aci/main/aci_bootstrap.json"
          },
          {
            "cdn": "https://cdn.jsdelivr.net/gh/aliasnet/aci@main/aci_runtime.json",
            "file": "aci://aci_runtime.json",
            "repo": "https://raw.githubusercontent.com/aliasnet/aci/main/aci_runtime.json"
          },
          {
            "cdn": "https://cdn.jsdelivr.net/gh/aliasnet/aci@main/connectors/github_connector.json",
            "file": "aci://connectors/github_connector.json",
            "repo": "https://raw.githubusercontent.com/aliasnet/aci/main/connectors/github_connector.json"
          },
          {
            "cdn": "https://cdn.jsdelivr.net/gh/aliasnet/aci@main/connectors/yggdrasil.json",
            "file": "aci://connectors/yggdrasil.json",
            "repo": "https://raw.githubusercontent.com/aliasnet/aci/main/connectors/yggdrasil.json"
          },
          {
            "cdn": "https://cdn.jsdelivr.net/gh/aliasnet/aci@main/entities.json",
            "file": "aci://entities.json",
            "repo": "https://raw.githubusercontent.com/aliasnet/aci/main/entities.json"
          },
          {
            "cdn": "https://cdn.jsdelivr.net/gh/aliasnet/aci@main/entities/bifrost/bifrost.json",
            "file": "aci://entities/bifrost/bifrost.json",
            "repo": "https://raw.githubusercontent.com/aliasnet/aci/main/entities/bifrost/bifrost.json"
          },
          {
            "cdn": "https://cdn.jsdelivr.net/gh/aliasnet/aci@main/functions.json",
            "file": "aci://functions.json",
            "repo": "https://raw.githubusercontent.com/aliasnet/aci/main/functions.json"
          },
          {
            "cdn": "https://cdn.jsdelivr.net/gh/aliasnet/aci@main/prime_directive.txt",
            "file": "aci://prime_directive.txt",
            "repo": "https://raw.githubusercontent.com/aliasnet/aci/main/prime_directive.txt"
          }
        ],
        "resolver_order": [
          "repo",
          "cdn",
          "local"
        ]
      }
    },
    "initialization_sequence": [
      {
        "step": "verify_core_files",
        "action": "confirm_required_files_present"
      },
      {
        "step": "load_nexus_core",
        "action": "load_and_validate_nexus"
      },
      {
        "step": "check_promotion_criteria",
        "action": "resolve_promotion_required_files"
      },
      {
        "step": "bootstrap_runtime",
        "action": "initialize_core_systems"
      },
      {
        "step": "launch_default_interface",
        "action": "render_mother_interface"
      }
    ],
    "promotion": {
      "auto_promote": true,
      "promotion_required_files": [
        "entities/nexus_core/nexus_core.json",
        "entities.json",
        "functions.json",
        "sanity.md"
      ],
      "retry": {
        "max_attempts": 3,
        "interval_seconds": 10
      }
    },
    "sandbox": {
      "enter_event": "sandbox.mode.enter",
      "alert_event": "sandbox.alert",
      "locked_event": "sandbox.mode.locked",
      "start_interface": "mother_sandbox",
      "notes": "If promotion criteria not met, do not continue to full bootstrap; start sandbox and emit alert."
    },
    "notes": "Manifest enforces preflight promotion check. If promotion fails, runtime enters sandbox and waits (with retries) before final decision."
  }
}
